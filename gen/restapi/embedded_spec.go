// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Authentication Microservice for Employee Managemetn System",
    "title": "Authentication Service",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/login": {
      "post": {
        "description": "Returns token for an authorized employee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "An employee logs in through this APII",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "401": {
            "description": "Incorrect Password",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Email not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/showProfile/{email}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showProfile",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard of Team Member",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unotherized",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "description": "An employee's data is saved in the database using this API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "An employee signs up through this API",
        "operationId": "EmployeeSignup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/validateToken": {
      "get": {
        "description": "Returns a response of success or failure based on the recieved token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Responds whether the recieved token is valid or not",
        "operationId": "ValidateToken",
        "responses": {
          "200": {
            "description": "Valid Token",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Invalid Token",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LoginInfo": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "employee": {
      "type": "object",
      "required": [
        "full_name",
        "father_name",
        "age",
        "email",
        "password",
        "NIC",
        "gender"
      ],
      "properties": {
        "NIC": {
          "type": "string",
          "example": "15101-8745216-9"
        },
        "age": {
          "type": "integer",
          "example": 23
        },
        "email": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\-\\.]+[@][wanclouds]{0,9}[\\.][net]{3}$",
          "example": "123@wanclouds.net"
        },
        "father_name": {
          "type": "string",
          "example": "Ali Ahmed"
        },
        "full_name": {
          "type": "string",
          "example": "Ahmed Khan"
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Employee Signup",
      "name": "Signup"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Authentication Microservice for Employee Managemetn System",
    "title": "Authentication Service",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/login": {
      "post": {
        "description": "Returns token for an authorized employee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "An employee logs in through this APII",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "401": {
            "description": "Incorrect Password",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Email not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/showProfile/{email}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showProfile",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard of Team Member",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unotherized",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "description": "An employee's data is saved in the database using this API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "An employee signs up through this API",
        "operationId": "EmployeeSignup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employee"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/validateToken": {
      "get": {
        "description": "Returns a response of success or failure based on the recieved token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Responds whether the recieved token is valid or not",
        "operationId": "ValidateToken",
        "responses": {
          "200": {
            "description": "Valid Token",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Invalid Token",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LoginInfo": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "employee": {
      "type": "object",
      "required": [
        "full_name",
        "father_name",
        "age",
        "email",
        "password",
        "NIC",
        "gender"
      ],
      "properties": {
        "NIC": {
          "type": "string",
          "example": "15101-8745216-9"
        },
        "age": {
          "type": "integer",
          "example": 23
        },
        "email": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_\\-\\.]+[@][wanclouds]{0,9}[\\.][net]{3}$",
          "example": "123@wanclouds.net"
        },
        "father_name": {
          "type": "string",
          "example": "Ali Ahmed"
        },
        "full_name": {
          "type": "string",
          "example": "Ahmed Khan"
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Employee Signup",
      "name": "Signup"
    }
  ]
}`))
}
